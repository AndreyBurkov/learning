В Spring Framework аннотация `@Scope` используется для определения области видимости (scope) бинов в контексте Spring.
Она позволяет указать, как и когда экземпляры бинов должны создаваться и управляться контейнером Spring. Это может быть
полезно в приложениях, где требуется контролировать жизненный цикл объектов.

Вот основные области видимости, которые можно задать с помощью аннотации `@Scope`:

1. **singleton** (по умолчанию): Один и тот же экземпляр бина будет возвращаться при каждом запросе. Бин создается при
первом запросе и хранится в контексте до завершения работы приложения.

   @Component
   @Scope("singleton")
   public class MySingletonBean {
       // ...
   }

2. **prototype**: Каждый запрос на получение бина будет возвращать новый экземпляр. Бин создается каждый раз, когда он
запрашивается из контекста.

   @Component
   @Scope("prototype")
   public class MyPrototypeBean {
       // ...
   }

3. **request**: Бин создается для каждого HTTP-запроса. Это актуально для веб-приложений.

   @Component
   @Scope(value = WebApplicationContext.SCOPE_REQUEST)
   public class MyRequestBean {
       // ...
   }

4. **session**: Бин создается для каждой HTTP-сессии. Также используется в веб-приложениях.

   @Component
   @Scope(value = WebApplicationContext.SCOPE_SESSION)
   public class MySessionBean {
       // ...
   }

5. **application**: Бин создается для всего жизненного цикла приложения. Это аналогично `singleton`, но используется
в контексте веб-приложения.

   @Component
   @Scope(value = WebApplicationContext.SCOPE_APPLICATION)
   public class MyApplicationBean {
       // ...
   }

### Пример использования

При использовании аннотации `@Scope` необходимо импортировать соответствующие классы:

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

Также стоит отметить, что для работы с аннотацией `@Scope` может потребоваться использование конфигурации Spring,
такой как `@Configuration` или `@EnableWebMvc`, для корректной работы с контекстом.

### Заключение

Аннотация `@Scope` предоставляет гибкость в управлении жизненным циклом бинов в Spring-приложениях. Выбор правильной
области видимости может значительно повлиять на производительность и поведение приложения.