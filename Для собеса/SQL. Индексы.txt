  Одной из причин НЕ применения индекса может быть высокий фактор кластеризации.
Фактор кластеризации - это метрика, которая показывает, какой шанс, что ключи из одной страницы индекса (т.е. из одного
узла дерева) указывают на разные станицы данных в таблице (как сильно строки таблицы перемешаны относительно ключей).
  Пример: есть индекс по колонке год рождения, но у людей может быть одинаковый год рождения. Строки с таким значением
могут быть разбросаны по все таблице. В худшем случае все строки могут иметь одинаковый год и тогда БД придется
поднимать все данные из таблицы.
 Индексы бывают кластерные и некластерные.
Пример кластерного индекса - бумажные словарь перевода с одного языка на другой. Слова упорядочены по алфавиту, что
позволяет быстро найти любое слово. Особенностью такого индекса является то, что при нахождении нужного слова (ключа)
не нужно дальше продолжать поиск. Все варианты перевода (значения) будут уже доступны.
В отличии от кластерного, некластерный индекс содержит не строки данных, а только адреса этих строк. Например,
алфавитный указатель - это некластерный индекс, где ключ - это слово, а указатели - номера страниц.

  Кластерный индекс может быть только один на таблицу. Не все БД поддерживают кластерные индексы.
Кластерные индексы поддерживаются в различных системах управления базами данных (СУБД). Ниже приведены популярные СУБД,
которые поддерживают кластерные индексы:
1. Microsoft SQL Server
   - Поддержка кластерных индексов является одной из ключевых особенностей.
   - Можно создавать только один кластерный индекс на таблице.
2. MySQL (InnoDB)
   - В движке InnoDB кластерный индекс реализован как основной индекс таблицы.
   - Таблица по умолчанию организована по кластерному индексу.
3. PostgreSQL
   - Поддержка кластерных индексов реализована через команду CLUSTER.
   - В PostgreSQL можно создавать индекс и затем кластеризовать таблицу по нему.
4. Oracle Database
   - Поддержка кластерных таблиц (clustering) и кластерных индексов.
   - Позволяет группировать таблицы по общему кластерному индексу для ускорения соединений.
5. IBM Db2
   - Поддержка кластерных индексов и кластерных таблиц.
6. MariaDB
   - В движке InnoDB — аналогично MySQL — используется кластерный индекс.
7. SAP HANA
   - Поддерживает кластерные индексы для оптимизации запросов.
8. SQLite
   - Не поддерживает кластерные индексы как отдельный тип, но по умолчанию данные хранятся в порядке первичного ключа, что можно рассматривать как кластеризацию.


