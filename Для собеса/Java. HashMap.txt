В Java HashMap (начиная с Java 8) дерево (обычно красно-черное дерево) появляется в бакете (случае, когда несколько
элементов хэшируются в один и тот же бакет), если количество элементов в этом бакете превышает определённый порог.

Конкретные условия:

- Когда количество элементов в бакете превышает **8** (по умолчанию), и при этом размер массива бакетов (таблицы)
превышает **64**, происходит преобразование связного списка в дерево.
- Если после этого количество элементов в дереве падает ниже **6** (после удалений), дерево преобразуется обратно в
связный список.

Это реализовано для повышения эффективности при большом количестве коллизий: дерево обеспечивает логарифмическую
сложность поиска, в отличие от линейной у связного списка.

Итак, в Java HashMap дерево появляется, когда:
- Количество элементов в бакете превышает 8,
- Размер таблицы превышает 64 элементов.

Это реализовано начиная с Java 8.