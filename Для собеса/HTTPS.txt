https://www.youtube.com/watch?v=nsyLWDtWXk0

  Виды шифрования:
1. Асимметричное шифрование
2. Симметричное шифрование
3. Комбинированное шифрование

  В HTTPS (Hypertext Transfer Protocol Secure) используются два типа шифрования — асимметричное и симметричное.
Их основные отличия заключаются в следующем:
1. Тип шифрования:
   - Асимметричное шифрование:
     - Использует пару ключей: публичный (открытый) и приватный (секретный).
     - Позволяет обмениваться данными безопасно без предварительного соглашения ключей.
     - В HTTPS применяется в процессе установления соединения (SSL/TLS handshake) для обмена ключами.
   - Симметричное шифрование:
     - Использует один секретный ключ для шифрования и дешифрования данных.
     - После установления соединения этот ключ используется для быстрого обмена информацией.
     - В HTTPS применяется для шифрования передаваемых данных после установления соединения.
2. Скорость:
   - Асимметричное шифрование медленнее, из-за сложных математических операций.
   - Симметричное шифрование значительно быстрее и применяется для передачи основной информации.
3. Назначение в HTTPS:
   - Асимметричное шифрование используется на этапе установления соединения для обмена ключами и аутентификации сервера
   (например, при проверке SSL-сертификата).
   - После установления безопасного канала осуществляется симметричное шифрование данных для быстрого обмена информацией.
4. Безопасность:
   - Асимметричное шифрование обеспечивает безопасный обмен ключами и аутентификацию.
   - Симметричное шифрование обеспечивает быструю и надежную защиту передаваемых данных после установления соединения.

Итак, в HTTPS асимметричное шифрование используется для безопасного установления соединения и обмена ключами, а
симметричное — для быстрого шифрования передаваемых данных в течение всей сессии.



--------------------------------------- Ассиметричное шифрование -------------------------------------------------------
  Ассиметричное шифрование — это метод криптографической защиты данных, при котором используются две разные ключа:
публичный и приватный. Публичный ключ можно свободно распространять, а приватный — хранить в тайне. Такой механизм
позволяет обеспечить безопасную передачу информации и аутентификацию.

Что касается протокола HTTPS (HyperText Transfer Protocol Secure), то он использует ассиметричное шифрование в процессе
установления защищенного соединения между клиентом (например, браузером) и сервером. Вот как это происходит:
1. **Инициация соединения**: Клиент отправляет запрос на установление защищенного соединения к серверу, указывая, что он
поддерживает HTTPS.
2. **Передача сертификата сервера**: Сервер отвечает, отправляя свой цифровой сертификат, выданный доверенным центром
сертификации (ЦС). Этот сертификат содержит публичный ключ сервера, а также информацию о его владельце и сроке действия.
3. **Проверка сертификата**: Клиент проверяет сертификат на подлинность, его срок, соответствие домена и наличие
доверенного ЦС. Это обеспечивает аутентификацию сервера.
4. **Генерация сеансового ключа**: После успешной проверки клиент генерирует случайный симметричный ключ (например, для
алгоритма AES). Этот ключ будет использоваться для шифрования дальнейших данных.
5. **Шифрование сеансового ключа**: Клиент шифрует сгенерированный симметричный ключ публичным ключом сервера (из
сертификата) и отправляет его обратно серверу.
6. **Расшифровка сеансового ключа**: Сервер использует свой приватный ключ для расшифровки полученного сообщения и
извлекает симметричный ключ.
7. **Установление защищенного соединения**: Теперь обе стороны используют общий симметричный ключ для шифрования и
дешифрования всей последующей передачи данных, что обеспечивает безопасность и быстродействие.

Таким образом, ассиметричное шифрование в HTTPS обеспечивает безопасную передачу симметричного ключа, который в
дальнейшем используется для быстрого шифрования всей коммуникации. Это сочетание ассиметричных и симметричных методов —
одна из ключевых особенностей протокола TLS (Transport Layer Security), который лежит в основе HTTPS.



---------------------------------------- Симметричное шифрование -------------------------------------------------------
В протоколе HTTPS (Hypertext Transfer Protocol Secure) для обеспечения безопасности данных используется комбинация
нескольких методов шифрования, включая симметричное шифрование. Вот как это происходит в процессе установки соединения:
1. **Инициализация соединения (TLS Handshake):**
   Когда клиент (например, браузер) инициирует соединение с сервером по HTTPS, начинается процесс рукопожатия
   (TLS handshake).
2. **Обмен сертификатами и согласование параметров:**
   Сервер отправляет свой сертификат, содержащий публичный ключ, клиент проверяет его подлинность. Затем стороны
   договариваются о параметрах шифрования (например, выбирают алгоритм шифрования).
3. **Создание совместного секретного ключа:**
   Используются асимметричные криптографические методы (например, RSA или алгоритмы на основе эллиптических кривых) для
   обмена данными. Клиент создает случайное значение (предварительный сеансовый ключ), шифрует его публичным ключом
   сервера и отправляет обратно.
4. **Генерация симметричного ключа:**
   После обмена данными обе стороны используют свои секретные значения и открытые ключи для вычисления общего секретного
   ключа — так называемого сеансового ключа. Этот ключ используется для симметричного шифрования.
5. **Использование симметричного шифрования:**
   После установки секретного ключа все последующие обмены данными между клиентом и сервером шифруются этим ключом с
   помощью симметричных алгоритмов (например, AES).

   **Преимущества симметричного шифрования в HTTPS:**
   - Быстрота: симметричные алгоритмы работают быстрее, чем асимметричные.
   - Безопасность: при правильной реализации обеспечивает конфиденциальность данных.

**Итак, в HTTPS симметричное шифрование происходит после установки соединения, когда обе стороны используют один и тот
же секретный ключ для шифрования и расшифровки передаваемых данных.**


------------------------------------------------------------------------------------------------------------------------
  В работе SSL сертификата работают три ключа:
1. Публичный (открытый) - асимметричный;
2. Приватный (частный) - асимметричный;
3. Сеансовый (секретный) - симметричный.

  С помощью публичного и приватного ключей мы получаем с клиента на сервер сеансовый ключ, и далее шифрование
происходит по сеансовому ключу.











