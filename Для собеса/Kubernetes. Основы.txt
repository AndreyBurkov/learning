  Kubernetes - это система управления контейнерами. Управляет различными контейнерами, которые запускаются на различных
серверах. Kubernetes отвечает за создание контейнеров, удаление, пересоздание и распределения нагрузки между разными
серверами. При этом сами контейнеры могут создаваться, как при помощи Docker, так и с помощью других систем создания и
контроля контейнеров (CRI-O, containerd).

  Kubernetes заботится о:
 - автоматическом развертывании приложений в контейнерах на разных серверах;
 - распределении нагрузки по нескольким серверам;
 - автоматическом масштабировании развернутых приложений;
 - мониторинге и проверке работоспособности контейнеров (healthcheck);
 - замене нерабочих контейнеров.


Container Runtime Environment (Среда запуска контейнеров).
 - docker
 - CRI-O
 - containerd

  Контейнер – это отдельное приложение или микросервис, упакованный со своими зависимостями, работающий как автономная
среда и приложение в одном.

  Pod - самый маленький элемент в K8s. В pod запускаются контейнеры. Состоит из 1го или нескольких контейнеров.
Pod'у выделяются определенные ресурсы (например место на диске), IP адрес (явлеяется общим для всех контейнеров в pod).
Рекомендуется создавать 1 контейнер в 1 pod.

  Кластер Kubernetes (K8s) – это группа вычислительных узлов или рабочих машин, на которых запускаются контейнерные
приложения. Контейнеризация – это процесс развертывания и поддержки времени выполнения программного обеспечения,
который объединяет код приложения со всеми файлами и библиотеками, необходимыми для запуска в любой инфраструктуре.
Kubernetes – это программное обеспечение для оркестрации контейнеров с открытым исходным кодом, с помощью которого
можно управлять контейнерами, а также координировать и планировать их использование в любом масштабе. Kubernetes
помещает контейнеры в поды и запускает их на узлах. Кластер Kubernetes содержит как минимум главный узел, на котором
запущен под контейнера, и плоскость управления, контролирующую кластер. Развертывая Kubernetes, вы, по сути, запускаете
кластер Kubernetes.


  Узел – это машина, на которой работают поды. Это может быть физический или виртуальный сервер, например инстанс
Amazon EC2. Есть один Master Node и Worker Nodes. Главный узел управляет рабочими узлами. Нагрузка распределяется
между рабочими узлами длч приложения. Master Node можно резервировать, т.е. можно создать две главных узла (одна будет
резервной)

Узел состоит из таких компонентов:
 - Container Runtime - отвечает за создание и контроль контейнеров непосредственно на каждом из узлов,
 включая Master Node. Это может быть docker, CRI-O, containerd;
 - Kubelet - это сервис, который отвечает за коммуникацию между разными узлами в рамках кластера k8s.
 Это агент, который следит за тем, чтобы на узле всё работало должным образом. Подобная работа подразумевает ряд задач.
 Первая — взаимодействие с мастер-узлом. Обычно мастер-узел отправляет задачу в форме манифеста или
 спецификации (Podspec). Манифест определяет, какие работы необходимо провести и какие Pod’ы нужно создать.
 Вторая — взаимодействие с исполняемой средой контейнера (container runtime) на узле. Исполняемая среда скачивает нужные
 образы, после чего вступает в действие kubelet, мониторя Pod’ы, созданные с использованием этих образов.
 Третья — проверки (probes) состояния Pod’ов. Кто отвечает за них? Конечно же, kubelet! Потому что следить за здоровьем
 Pod’а — его обязанность!
 - Kube-proxy - отвечает за сетевые ресурсы в рамках каждого узла;
 - API Server (ТОЛЬКО НА MASTER NODE!!!) - рабочие узлы используя kubelet взаимодействуют с API Server на главном узле;
 - Scheduler (ТОЛЬКО НА MASTER NODE!!!) - сервис, планирующий и распределяющий нагрузку между всеми узлами в рамках
 кластера k8s. Если нужно запустить приложение на 10 pod, то Scheduler будет распределять эти поды по нодам в кластере.
 - Kube Controller Manager (ТОЛЬКО НА MASTER NODE!!!) - это сервис, которые контролирует все поды в рамках всего
 кластера k8s. Это набор различных контроллеров. Например, может быть один контроллер, который наблюдает за узлами,
 другой — за задачами (Jobs), и так далее. такой менеджер — это инструмент «всё в одном». По сути, он отслеживает сразу
 все ресурсы. За это отвечает ОДИН процесс, но благодаря многозадачности складывается впечатление, что одновременно
 работают несколько контроллеров.
 - Cloud Controller Manager (ТОЛЬКО НА MASTER NODE!!!). Обычно кластеры k8s запускаются в облаке и есть разные
 провайдеры типа AWS, Google Cloud, Digital Ocean и др., которые предоставляют услугу создания кластера k8s.
 Cloud Controller Manager взаимодействует с менеджером на стороне провайдера, который отвечает за создание и расширения
 кластера k8s.
 - etcd (ТОЛЬКО НА MASTER NODE!!!) - сервис с БД key->value. Хранит логи и всю информацию о кластере.
 - DNS-сервис (ТОЛЬКО НА MASTER NODE!!!) - благодаря этому сервису можно взаимодействовать внутри кластера k8s,
 используя имена сервисов вместо IP-адресов


https://kubernetes.io/ru/docs/concepts/overview/working-with-objects/namespaces/
  Namespaces (Пространства имён).
Kubernetes поддерживает несколько виртуальных кластеров в одном физическом кластере. Такие виртуальные кластеры
называются пространствами имён.























